@model IEnumerable<OdiseeConcerts.Models.Order>

@{
    ViewData["Title"] = "Overzicht Bestellingen"; // Vertaald
}

<h1>@ViewData["Title"]</h1>

@* De knop "Nieuwe Bestelling Aanmaken" is hier volledig verwijderd, aangezien deze functionaliteit niet werkt en niet langer gewenst is in het admin-overzicht. *@

<table class="table">
    <thead>
        <tr>
            <th>
                Concert <!-- NIEUW: Kolom voor Concert -->
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumTickets)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Paid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DiscountApplied)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketOffer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @* NIEUW: Weergave van Concert details met null-check, vergelijkbaar met UnpaidOrders.cshtml *@
                    @{
                        var concertInfo = "Onbekend Concert";
                        if (item.TicketOffer?.Concert != null)
                        {
                            // Toont Artiest - Locatie - Datum
                            concertInfo = $"{item.TicketOffer.Concert.Artist} - {item.TicketOffer.Concert.Location} - {item.TicketOffer.Concert.Date.Date.ToString("dd/MM/yyyy")}";
                        }
                    }
                    @concertInfo
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumTickets)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Paid)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DiscountApplied)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TicketOffer.TicketType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.Email) <!-- Toont e-mail van gebruiker i.p.v. alleen ID -->
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Bewerken</a> | <!-- Vertaald -->
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> | <!-- Vertaald -->
                    <a asp-action="Delete" asp-route-id="@item.Id">Verwijderen</a> <!-- Vertaald -->
                </td>
            </tr>
        }
    </tbody>
</table>